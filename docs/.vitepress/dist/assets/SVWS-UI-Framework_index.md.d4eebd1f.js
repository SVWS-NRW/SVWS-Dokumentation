import{_ as e,y as r,x as n,W as t}from"./plugin-vue_export-helper.68280688.js";var i="/assets/Uebersicht-REST-Server-02.29de40c4.png";const k='{"title":"SVWS-UI-Framework","description":"","frontmatter":{},"headers":[{"level":2,"title":"Open Source","slug":"open-source"},{"level":2,"title":"Entwicklung der UI-Frameworks","slug":"entwicklung-der-ui-frameworks"},{"level":2,"title":"Styleguide und Bedienkonzept","slug":"styleguide-und-bedienkonzept"},{"level":2,"title":"Konzept der SVWS-GUI-Programmierung","slug":"konzept-der-svws-gui-programmierung"},{"level":3,"title":"\xDCbersicht GUI-Tools","slug":"ubersicht-gui-tools"}],"relativePath":"SVWS-UI-Framework/index.md","lastUpdated":1649313088780}',o={},a=t('<h1 id="svws-ui-framework" tabindex="-1">SVWS-UI-Framework <a class="header-anchor" href="#svws-ui-framework" aria-hidden="true">#</a></h1><h2 id="open-source" tabindex="-1">Open Source <a class="header-anchor" href="#open-source" aria-hidden="true">#</a></h2><p>Ziel des Projektes ist es, ein eigenes Framework f\xFCr die UI-Komponenten zu benutzen und dieses mit Storybook.js in einem OpenSource-Repository zur Verf\xFCgung zu stellen. Dabei kann das verwendete Repository mit GitHub-Pages als Grundlage f\xFCr die Bereitstellung dienen:</p><p><a href="https://github.com/SVWS-NRW/SVWS-UI-Framework" target="_blank" rel="noopener noreferrer">SVWS-UI-Framework-Repository auf GitHub</a></p><h2 id="entwicklung-der-ui-frameworks" tabindex="-1">Entwicklung der UI-Frameworks <a class="header-anchor" href="#entwicklung-der-ui-frameworks" aria-hidden="true">#</a></h2><p>Zu Beginn des Projekts wurde festgelegt, dass die Entwicklung des UI-Framework mit VUE.js erfolgen soll.</p><p><a href="./GUI-Auswahl.html">Auswahl des GUI-Frameworks</a></p><p>Im Anschluss wurde zun\xE4chst ein &quot;Storybook&quot; erstellt. Die Vorteile von Storybook liegen in der zuverl\xE4ssigen Bereitstellung und dem vom eigentlichen Code unabh\xE4ngigen Testing. Die Storybook-Umgebung kann auf einem Windows-Rechner wie folgt aus einem abonierten Repository aufgerufen werden:</p><ul><li>Im Stammordner von <code>git/SVWS-UI-Framework</code> eine Powershell \xF6ffnen.</li><li><code>.\\gradlew clean build</code> ausf\xFChren</li><li><code>npm run storybook:start</code> eingeben</li></ul><p>siehe auch: <a href="https://storybook.js.org" target="_blank" rel="noopener noreferrer">https://storybook.js.org</a></p><h2 id="styleguide-und-bedienkonzept" tabindex="-1">Styleguide und Bedienkonzept <a class="header-anchor" href="#styleguide-und-bedienkonzept" aria-hidden="true">#</a></h2><p><a href="./Styleguide.html">Styleguide und Screendesign</a></p><p><a href="./Bedienkonzept.html">Bedienkonzept der GUI-Komponenten</a></p><h2 id="konzept-der-svws-gui-programmierung" tabindex="-1">Konzept der SVWS-GUI-Programmierung <a class="header-anchor" href="#konzept-der-svws-gui-programmierung" aria-hidden="true">#</a></h2><h3 id="ubersicht-gui-tools" tabindex="-1">\xDCbersicht GUI-Tools <a class="header-anchor" href="#ubersicht-gui-tools" aria-hidden="true">#</a></h3><p>Die folgende Grafik soll die verschiedensten M\xF6glichkeiten darstellen, wie in Zukunft verschiedene GUI-Tools auf die Datenbanken zugreifen k\xF6nnen. Durch die standartisierte Open-API-Schnittstelle ist es auch unerheblich, mit welchem Framework das GUI programmiert ist. Denkbar sind auch Desktop-Applikationen oder Web-Clients, die den REST-Server ansprechen.</p><p><img src="'+i+'" alt="\xDCbersicht-REST-Server-02"></p>',17),s=[a];function d(l,u,h,c,p,g){return n(),r("div",null,s)}var f=e(o,[["render",d]]);export{k as __pageData,f as default};
