import{_ as e,y as n,x as i,W as t}from"./plugin-vue_export-helper.68280688.js";var a="/assets/Umgebungsvariablen_setzen_1.e226f1d7.png",s="/assets/Umgebungsvariablen_setzen_2.16017b72.png",r="/assets/eclipse.ini.0bcd0c78.png",l="/assets/eclipse.ini_Zeilen_loeschen.eeae6e48.png",o="/assets/eclipse_JDK_1.466cce7b.png",d="/assets/eclipse_JDK_2.1c7bf4c0.png",u="/assets/eclipse_JDK_3.37e459b9.png",p="/assets/eclipse_marketplace_java_17_support_1.c2ae37bd.png",c="/assets/eclipse_marketplace_java_17_support_2.395da849.png",g="/assets/eclipse_java_devtool.05db026e.png",h="/assets/eclipse_json.00f05698.png",m="/assets/eclipse_java_compiler.147b2d1f.png",v="/assets/eclipse_general_editor.fe6d3e51.png",b="/assets/eclipse_general_workspace.8c8d9ba2.png",w="/assets/Gradle_benoetigte_Variablen_I.e9da4955.png",f="/assets/Gradle_benoetigte_Variablen_II.95f85527.png";const I='{"title":"Systemvoraussetzungen und Installationshinweise","description":"","frontmatter":{},"headers":[{"level":2,"title":"Git Repositories in Eclipse einrichten","slug":"git-repositories-in-eclipse-einrichten"},{"level":3,"title":"Quellen aus GitLab eintragen:","slug":"quellen-aus-gitlab-eintragen"},{"level":3,"title":"Alternative Quellen in GitHub.com (f\xFCr Externe)","slug":"alternative-quellen-in-github-com-fur-externe"},{"level":2,"title":"Arbeiten in Eclipse","slug":"arbeiten-in-eclipse"},{"level":3,"title":"Git Perspective","slug":"git-perspective"},{"level":3,"title":"Java Perspective einrichten","slug":"java-perspective-einrichten"},{"level":3,"title":"Server, Client, etc bauen","slug":"server-client-etc-bauen"},{"level":3,"title":"svwsconfig.json anpassen","slug":"svwsconfig-json-anpassen"},{"level":3,"title":"Importieren einer MDB Datenbank","slug":"importieren-einer-mdb-datenbank"},{"level":3,"title":"Starten des Servers","slug":"starten-des-servers"},{"level":2,"title":"Variablen setzen","slug":"variablen-setzen"},{"level":2,"title":"signtool installieren","slug":"signtool-installieren"},{"level":2,"title":"DBeaver","slug":"dbeaver"},{"level":2,"title":"VSCodeUserSetup","slug":"vscodeusersetup"},{"level":2,"title":"git per terminal auf Windows","slug":"git-per-terminal-auf-windows"}],"relativePath":"Entwicklungsumgebungen/Eclipse-Windows_im_MSB/index.md","lastUpdated":1649312336134}',_={},S=t('<h1 id="installation-unter-windows-10-64bit-im-msb" tabindex="-1"><em><strong>Installation unter Windows 10 64bit im MSB</strong></em> <a class="header-anchor" href="#installation-unter-windows-10-64bit-im-msb" aria-hidden="true">#</a></h1><h1 id="systemvoraussetzungen-und-installationshinweise" tabindex="-1">Systemvoraussetzungen und Installationshinweise <a class="header-anchor" href="#systemvoraussetzungen-und-installationshinweise" aria-hidden="true">#</a></h1><p>Die gesammte Entwicklungsumgebung belegt in etwa 3 GB. Die Installation auf einem Netzlauferk sollte vermieden werden, da gemappte Laufwerke unter Windows, wie es zum Beipiel im MSB-User Homeverzeichnis der Fall ist, im Kompiliervorgang zu Abbr\xFCchen beim &#39;gradle build&#39; f\xFChren. Daher am Besten alles lokal auf der Partition D:\\ installieren und m\xF6glichst noch Puffer einplanen.<br> Installation unter: <code>D:\\svws-Entwicklungsumgebung\\</code> mit den jeweiligen Unterverzeichnissen:</p><ul><li><code>jdk-17</code></li><li><code>workspace</code></li><li>...</li></ul><h1 id="maria-db-installieren" tabindex="-1">Maria db installieren <a class="header-anchor" href="#maria-db-installieren" aria-hidden="true">#</a></h1><ul><li>download : Maria db 10.6 -&gt; <a href="https://mariadb.org/download/?t=mariadb&amp;p=mariadb&amp;r=10.6.5&amp;os=windows&amp;cpu=x86_64&amp;pkg=msi&amp;m=netcologne" target="_blank" rel="noopener noreferrer">https://mariadb.org/download/?t=mariadb&amp;p=mariadb&amp;r=10.6.5&amp;os=windows&amp;cpu=x86_64&amp;pkg=msi&amp;m=netcologne</a></li><li>root user einrichten z.B. svwsadmin</li><li>Installationsordner im MSB auch unter D:\\svws-Entwicklungsumgebung\\ , weil man sonst nur mit admin rechten an die Datenbank von au\xDFen gelangt</li></ul><h1 id="jdk-17-installieren" tabindex="-1">JDK 17 installieren <a class="header-anchor" href="#jdk-17-installieren" aria-hidden="true">#</a></h1><ul><li>Download des jdk-17 -&gt; <a href="https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.zip" target="_blank" rel="noopener noreferrer">https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.zip</a></li><li>Entpacken in z.B. <code>D:\\svws-Entwicklungsumgebung\\jdk-17\\</code></li><li>Path setzen: \xDCber das Windowssymbol den Editor f\xFCr die Umgebungsvariablen \xF6ffnen ...</li></ul><p><img src="'+a+'" alt="Umgebungsvariablen setzen"></p><ul><li>die Variable &quot;Path&quot; bearbeiten und einen weiteren Eintrag zum Java Verzeichnis einf\xFCgen: <code>D:\\svws-Entwicklungsumgebung\\jdk-17\\bin</code></li></ul><p><img src="'+s+'" alt="Umgebungsvariablen setzen"></p><h1 id="nodejs-installieren" tabindex="-1">NodeJS installieren <a class="header-anchor" href="#nodejs-installieren" aria-hidden="true">#</a></h1><ul><li>Install node.js 16er Version -&gt; <a href="https://nodejs.org/dist/v16.13.0/node-v16.13.0-x64.msi" target="_blank" rel="noopener noreferrer">https://nodejs.org/dist/v16.13.0/node-v16.13.0-x64.msi</a></li></ul><h1 id="eclipse-installieren-und-konfigurieren" tabindex="-1">Eclipse installieren und konfigurieren <a class="header-anchor" href="#eclipse-installieren-und-konfigurieren" aria-hidden="true">#</a></h1><ul><li>Installieren eclipse-inst-win64.zip (2021-09) (Eclipse IDE for Enterprise Java and Web Developers)-&gt; <a href="https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2021-09/R/eclipse-jee-2021-09-R-win32-x86_64.zip&amp;mirror_id=17" target="_blank" rel="noopener noreferrer">https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2021-09/R/eclipse-jee-2021-09-R-win32-x86_64.zip&amp;mirror_id=17</a> unter <code>D:\\svws-Entwicklungsumgebung\\eclipse\\</code></li><li>Einmaliger Start Eclipse und festlegen des Workspace: <code>D:\\svws-Entwicklungsumgebung\\workspace\\</code></li><li>Bei Bedarf den Speicher hochsetzen: per texteditor <code>D:\\svws-Entwicklungsumgebung\\eclipse\\eclipse.ini</code> entsprechend z.B. aus der 512 eine 2048 machen</li></ul><p><img src="'+r+'" alt="Speicher hochsetzen"></p><ul><li>... und bei der Verwendung von Java 17 die entsprechende Zeile <code>D:\\svws-Entwicklungsumgebung\\eclipse\\eclipse.ini</code> l\xF6schen:</li></ul><p><img src="'+l+'" alt="Umgebungsvariablen setzen"></p><ul><li>Eclipse &gt; Window &gt; Preferences &gt; Java &gt; installed JREs -&gt; Add <br> Java 17 Verzeichnis eintragen:</li></ul><p><img src="'+o+'" alt=""></p><p><img src="'+d+'" alt=""></p><p><img src="'+u+'" alt=""></p><ul><li>Eclipse &gt; Help &gt; Marcet Place -&gt; Java 17 suchen und &quot;Eclipse Java Development Tools Latest Release&quot; installieren</li></ul><p><img src="'+p+'" alt=""></p><p>bei der Installation alle 4 Optionen ausw\xE4hlen</p><p><img src="'+c+'" alt=""></p><ul><li><p>Eclipse &gt; Help &gt; Marcet Place -&gt; Java development suchen und kontrollieren, ob &quot;Eclipse Java Development Tools Latest Release&quot; bereits installiert ist; ansonsten installieren <img src="'+g+'" alt=""></p></li><li><p>Eclipse &gt; Help &gt; Marcet Place -&gt; JSON editor suchen und &quot;JSON Editor Plugin 1.1.2&quot; installieren</p></li></ul><p><img src="'+h+'" alt=""></p><ul><li>Eclipse &gt; Window &gt; Preferences &gt; Java &gt; Compiler -&gt; 17 eintragen</li></ul><p><img src="'+m+'" alt=""></p><ul><li>Eclipse &gt; Window &gt; Preferences &gt; General &gt; Editors &gt; Text Editors &gt; Spelling &gt; UTF-8</li></ul><p><img src="'+v+'" alt=""></p><ul><li>Eclipse &gt; Window &gt; Preferences &gt; General &gt; Workspace &gt; Text file encodig &gt; Other UTF-8</li></ul><p><img src="'+b+`" alt=""></p><h2 id="git-repositories-in-eclipse-einrichten" tabindex="-1">Git Repositories in Eclipse einrichten <a class="header-anchor" href="#git-repositories-in-eclipse-einrichten" aria-hidden="true">#</a></h2><ul><li>Eclipse &gt; Windows &gt; Perspektive &gt; Open Perspective &gt; Other -&gt; Git</li></ul><h3 id="quellen-aus-gitlab-eintragen" tabindex="-1">Quellen aus GitLab eintragen: <a class="header-anchor" href="#quellen-aus-gitlab-eintragen" aria-hidden="true">#</a></h3><ul><li>Repositories in Eclipse clonen: rechte Maustaste Git &gt; Clone a Git Repository</li><li>URL und Passwort eingeben</li><li>gerne auch in einem Unterverzeichnis <code>D:\\svws-Entwicklungsumgebung\\git\\</code></li></ul><h4 id="urls" tabindex="-1">URLs: <a class="header-anchor" href="#urls" aria-hidden="true">#</a></h4><pre><code>	https://git.svws-nrw.de/svws/SVWS-Server
	https://git.svws-nrw.de/svws/SVWS-UI-Framework
	https://git.svws-nrw.de/svws/SVWS-Client
	https://git.svws-nrw.de/svws/svws-dokumentation
</code></pre><p>optional zum Testen des MDB-Datenbankimports:</p><pre><code>	https://git.svws-nrw.de/svws/SVWS-TestMDBs
</code></pre><h3 id="alternative-quellen-in-github-com-fur-externe" tabindex="-1">Alternative Quellen in <a href="http://GitHub.com" target="_blank" rel="noopener noreferrer">GitHub.com</a> (f\xFCr Externe) <a class="header-anchor" href="#alternative-quellen-in-github-com-fur-externe" aria-hidden="true">#</a></h3><p>Hier ben\xF6tigt man als &quot;Passwort&quot; in Eclipse den pers\xF6nlichen Github Token</p><pre><code>	https://github.com/FPfotenhauer/SVWS-Server
	https://github.com/FPfotenhauer/SVWS-Client
	https://github.com/SVWS-NRW/SVWS-UI-Framework
</code></pre><h2 id="arbeiten-in-eclipse" tabindex="-1">Arbeiten in Eclipse <a class="header-anchor" href="#arbeiten-in-eclipse" aria-hidden="true">#</a></h2><p>In Eclipse kann man jeweils die &quot;Perspective&quot; \xE4ndern und direkt auf und mit den Git Repositories arbeiten oder in der Java Entwicklungsumgebung</p><h3 id="git-perspective" tabindex="-1">Git Perspective <a class="header-anchor" href="#git-perspective" aria-hidden="true">#</a></h3><p>Eclipse im Git Perspective ge\xF6ffnet (rechts oben):</p><ul><li>rechte Maustaste pull holt sich die aktuellen \xC4nderungen</li><li>Wechseln in SVWS-Server den dev-Branch (wenn dev-Branch aktiv), um die aktuellste Entwicklung zu testen</li><li>Check out as new Local Branch</li></ul><h3 id="java-perspective-einrichten" tabindex="-1">Java Perspective einrichten <a class="header-anchor" href="#java-perspective-einrichten" aria-hidden="true">#</a></h3><p>Wechseln in Java-Perspective (rechts oben):</p><ul><li>Eclipse &gt; File &gt; Import &gt; Import existing Gradle-Project</li><li>Import der vier Repositories als Gradle-Projekt</li><li>Eclipse schlie\xDFen</li><li>ggf. unter <code>window preferences</code> das gradle Homeverzeichnis sinnvoll setzten.</li><li>in den Umgebungsvariablen oder im .gradle/gradle.config das Github_token, den Github_actor und das Schildpasswort wie folgt eintragen:</li></ul><p><img src="`+w+'" alt=""></p><p><img src="'+f+`" alt=""></p><h3 id="server-client-etc-bauen" tabindex="-1">Server, Client, etc bauen <a class="header-anchor" href="#server-client-etc-bauen" aria-hidden="true">#</a></h3><ul><li>View &gt; Gradle Tasks &gt; SVWS-Server &gt; Run Clean</li><li>View &gt; Gradle Tasks &gt; SVWS-Server &gt; Run Build</li><li>Beachte: der Server und das UI m\xFCssen vor dem Client fertig gebaut sein und in der passenden Versionsnummer vorliegen</li></ul><h3 id="svwsconfig-json-anpassen" tabindex="-1">svwsconfig.json anpassen <a class="header-anchor" href="#svwsconfig-json-anpassen" aria-hidden="true">#</a></h3><p>unter svws-server -&gt; svws-server-app -&gt; src/main/resources findet man die Datei</p><p>svwsconfig.json.example</p><p>diese kann man als Vorlage benutzen und in svws-server -&gt; svws-server-app -&gt; svwsconfig.json.example kopieren und die entsprechenden Eintragungen machen.</p><p>Hier ein Beispiel</p><pre><code>  {
   &quot;EnableClientProtection&quot; : null,
   &quot;DisableDBRootAccess&quot; : false,
   &quot;DisableAutoUpdates&quot; : false,
   &quot;UseHTTPDefaultv11&quot; : false,
   &quot;PortHTTPS&quot; : 443,
   &quot;UseCORSHeader&quot; : true,
   &quot;TempPath&quot; : &quot;tmp&quot;,
   &quot;TLSKeyAlias&quot; : null,
   &quot;TLSKeystorePath&quot; : &quot;.&quot;,
   &quot;TLSKeystorePassword&quot; : &quot;svwskeystore&quot;,
   &quot;ClientPath&quot; : &quot;D:/svws-Entwicklungsumgebung/git/SVWS-Client/build/output&quot;,
   &quot;LoggingEnabled&quot; : true,
   &quot;LoggingPath&quot; : &quot;logs&quot;,
   &quot;DBKonfiguration&quot; : {
   &quot;dbms&quot; : &quot;MARIA_DB&quot;,
   &quot;location&quot; : &quot;localhost&quot;,
   &quot;defaultschema&quot; : &quot;svwsdb&quot;,
   &quot;SchemaKonfiguration&quot; : [ {
   &quot;name&quot; : &quot;svwsdb&quot;,
   &quot;svwslogin&quot; : false,
   &quot;username&quot; : &quot;svwsadmin&quot;,
   &quot;password&quot; : &quot;svwsadmin&quot;
   } ]
  } 
}&#39;
</code></pre><h3 id="importieren-einer-mdb-datenbank" tabindex="-1">Importieren einer MDB Datenbank <a class="header-anchor" href="#importieren-einer-mdb-datenbank" aria-hidden="true">#</a></h3><p>Run configuration editieren f\xFCr den Import der MDB</p><p>siehe:</p><p>migration svsw-db utils-&gt; src/main/java/ -&gt; app -&gt; migrate.java</p><h3 id="starten-des-servers" tabindex="-1">Starten des Servers <a class="header-anchor" href="#starten-des-servers" aria-hidden="true">#</a></h3><p>svws-server -&gt; svws server app- /src/main/java/ -&gt; de.nwr ... -&gt; main.jve</p><h1 id="svws-installer-optional" tabindex="-1">SVWS Installer (optional): <a class="header-anchor" href="#svws-installer-optional" aria-hidden="true">#</a></h1><p>Soll der Windows Installer (.exe) gebaut werden, so ben\xF6tigt man noch zus\xE4tzlich Software, Zertifikat und Passwort zum zertifizieren der Installationsdatei gegen\xFCber Microsoft.</p><h2 id="variablen-setzen" tabindex="-1">Variablen setzen <a class="header-anchor" href="#variablen-setzen" aria-hidden="true">#</a></h2><p>Die folgenden Umgebungsvariablen werden ben\xF6tigt (Vorgehen: vgl. oben)</p><pre><code>SCHILD2_ACESS_PASSWORD
SVWS_CERTIFICATE_PASSWORD 
SVWS_CERTIFICATE_PATH 
SVWS_SIGNTOLL_PATH
</code></pre><h2 id="signtool-installieren" tabindex="-1">signtool installieren <a class="header-anchor" href="#signtool-installieren" aria-hidden="true">#</a></h2><h1 id="optionale-software" tabindex="-1">optionale Software <a class="header-anchor" href="#optionale-software" aria-hidden="true">#</a></h1><h2 id="dbeaver" tabindex="-1">DBeaver <a class="header-anchor" href="#dbeaver" aria-hidden="true">#</a></h2><ul><li>download: <a href="https://dbeaver.io/download/" target="_blank" rel="noopener noreferrer">https://dbeaver.io/download/</a></li></ul><h2 id="vscodeusersetup" tabindex="-1">VSCodeUserSetup <a class="header-anchor" href="#vscodeusersetup" aria-hidden="true">#</a></h2><ul><li>Install VSCodeUserSetup-x64-latest.exe (optional)</li></ul><h2 id="git-per-terminal-auf-windows" tabindex="-1">git per terminal auf Windows <a class="header-anchor" href="#git-per-terminal-auf-windows" aria-hidden="true">#</a></h2><ul><li>Ohne Administrationsrechte installierbar</li><li>hier die Anleitung auf <a href="http://heise.de" target="_blank" rel="noopener noreferrer">heise.de</a> -&gt; <a href="https://www.heise.de/tipps-tricks/Git-auf-Windows-installieren-und-einrichten-5046134.html" target="_blank" rel="noopener noreferrer">https://www.heise.de/tipps-tricks/Git-auf-Windows-installieren-und-einrichten-5046134.html</a></li><li>download: <a href="https://git-scm.com/download/win" target="_blank" rel="noopener noreferrer">https://git-scm.com/download/win</a></li><li>Im MSB noch den Proxy eintragen: git config --global http.proxy <a href="http://10.64.128.22:3128" target="_blank" rel="noopener noreferrer">http://10.64.128.22:3128</a></li></ul>`,82),q=[S];function k(E,x,D,P,z,j){return i(),n("div",null,q)}var V=e(_,[["render",k]]);export{I as __pageData,V as default};
